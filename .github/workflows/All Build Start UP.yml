name: All Build Start UP

on:
  workflow_dispatch:
    inputs:
      BATCH:
        description: "9个一组分批并行-选择分支(1-3)"
        required: true
        default: "1"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:

      - name: Set Matrix from FILE List
        id: set-matrix
        run: |
          BATCH="${{ github.event.inputs.BATCH }}"
          if [[ "$BATCH" == "1" ]]; then
            FILE_LIST=(
              "oneplus_nord_ce4_lite_5g_v"
              "oneplus_nord_ce4_v"
              "oneplus_nord_4_v"
              "oneplus_ace_3v_v"
              "oneplus_10_pro_v"
              "oneplus_10t_v"
              "oneplus_11r_v"
              "oneplus_ace2_v"
              "oneplus_ace_pro_v"
            )
          elif [[ "$BATCH" == "2" ]]; then
            FILE_LIST=(
              "oneplus_11_v"
              "oneplus_12r_v"
              "oneplus_ace2_pro_v"
              "oneplus_ace3_v"
              "oneplus_open_v"
              "oneplus12_v"
              "oneplus_13r"
              "oneplus_ace3_pro_v"
              "oneplus_ace5"
            )
          elif [[ "$BATCH" == "3" ]]; then
            FILE_LIST=(
              "oneplus_pad_pro_v"
              "oneplus_pad2_v"
              "oneplus_ace5_pro"
              "oneplus_13"
              "oneplus_13t"
              "oneplus_13s"
              "oneplus_pad_2_pro"
              "oneplus_pad_3"
            )
          else
            echo "无效的 BATCH 值: $BATCH"
            exit 1
          fi

          MATRIX_JSON=$(printf '%s\n' "${FILE_LIST[@]}" | jq -R -s -c '
            split("\n")[:-1] |
            map({
              file: .,
              enable_sched: (
                . == "oneplus_pad_3" or
                . == "oneplus_pad_2_pro" or
                . == "oneplus_13" or
                . == "oneplus_13t" or
                . == "oneplus_ace5_pro"
              )
            })
          ')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  build:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Call Original Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Build OnePlus_SukiSU Ultra All
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: |
            {
              "FILE": "${{ matrix.file }}",
              "SUSFS_CI": "CI",
              "KSU_META": "susfs-main/Numbersf",
              "BUILD_TIME": "F",
              "SUFFIX": "",
              "FAST_BUILD": "true",
              "VFS": "true",
              "KPM": "true",
              "SCHED": "${{ matrix.enable_sched }}",
              "ZRAM": "false"
            }

      - name: Wait for Builds to Finish
        run: |
          echo "等待35分钟以确保构建完成..."
          sleep 1140

      - name: Clean ccache After Build
        run: |
          echo "Cleaning ccache for $HOME/.ccache_${{ matrix.file }} ..."
          rm -rf "$HOME/.ccache_${{ matrix.file }}"


  wait-and-download:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup gh CLI
        run: |
          sudo apt update && sudo apt install -y gh zip curl jq
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: List Matching Artifacts for Current Batch
        id: list-artifacts
        run: |
          echo "查找当前 Batch 的 Artifacts..."
          mkdir -p all_artifacts

          BATCH="${{ github.event.inputs.BATCH }}"
          if [[ "$BATCH" == "1" ]]; then
            FILE_LIST=(
              "oneplus_nord_ce4_lite_5g"
              "oneplus_nord_ce4"
              "oneplus_nord_4"
              "oneplus_ace_3v"
              "oneplus_10_pro"
              "oneplus_10t"
              "oneplus_11r"
              "oneplus_ace2"
              "oneplus_ace_pro"
            )
          elif [[ "$BATCH" == "2" ]]; then
            FILE_LIST=(
              "oneplus_11"
              "oneplus_12r"
              "oneplus_ace2_pro"
              "oneplus_ace3"
              "oneplus_open"
              "oneplus12"
              "oneplus_13r"
              "oneplus_ace3_pro"
              "oneplus_ace5"
            )
          elif [[ "$BATCH" == "3" ]]; then
            FILE_LIST=(
              "oneplus_pad_pro"
              "oneplus_pad2"
              "oneplus_ace5_pro"
              "oneplus_13"
              "oneplus_13t"
              "oneplus_13s"
              "oneplus_pad_2_pro"
              "oneplus_pad_3"
            )
          else
            echo "无效的 BATCH 值: $BATCH"
            exit 1
          fi

          ALL_ARTIFACTS=$(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[].name')

          MATCHED_ARTIFACTS=()
          for FILE in "${FILE_LIST[@]}"; do
            for ART in $ALL_ARTIFACTS; do
              if [[ "$ART" == *"${FILE}"* ]]; then
                MATCHED_ARTIFACTS+=("$ART")
              fi
            done
          done

          if [[ "${#MATCHED_ARTIFACTS[@]}" -eq 0 ]]; then
            echo "没有匹配的 Artifact，终止"
            exit 1
          fi

          ARTIFACT_NAMES=$(IFS=";"; echo "${MATCHED_ARTIFACTS[*]}")
          echo "ARTIFACT_NAMES=$ARTIFACT_NAMES" >> "$GITHUB_OUTPUT"

      - name: Download All Matched Artifacts as zip
        run: |
          mkdir -p all_artifacts
          IFS=';' read -ra NAMES <<< "${{ steps.list-artifacts.outputs.ARTIFACT_NAMES }}"
          for NAME in "${NAMES[@]}"; do
            echo "查找 artifact $NAME 的 ID..."
            ARTIFACT_ID=$(gh api repos/${{ github.repository }}/actions/artifacts --jq ".artifacts[] | select(.name==\"$NAME\") | .id")
            if [[ -n "$ARTIFACT_ID" ]]; then
              echo "下载 $NAME (ID: $ARTIFACT_ID)..."
              curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -o "all_artifacts/${NAME}.zip" \
                   "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${ARTIFACT_ID}/zip"
            else
              echo "未找到 $NAME 的 ID，跳过"
            fi
          done

      - name: Create Final ZIP from All Artifact Zips
        run: |
          cd all_artifacts
          zip -r ../All-AnyKernel3-SukiSUUltra.zip ./*.zip

      - name: Upload Combined ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: All-AnyKernel3-SukiSUUltra
          path: All-AnyKernel3-SukiSUUltra.zip